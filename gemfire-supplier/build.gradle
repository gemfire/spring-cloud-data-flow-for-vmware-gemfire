plugins {
    id 'java-library'
    id 'idea'
    id 'eclipse'
    id "io.freefair.lombok" version "8.0.1"
    id "io.spring.dependency-management"
}

group = 'com.vmware.gemfire'
version = '1.0-SNAPSHOT'


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencyManagement {
    imports {
        mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    }
}

dependencies {

    implementation project(':gemfire-common')
    implementation ("com.vmware.gemfire:spring-data-2.7-gemfire-10.0:$springDataGemfire") {
        exclude group: "org.springframework"
        exclude module: "shiro-event"
        exclude module: "shiro-lang"
        exclude module: "shiro-crypto-hash"
        exclude module: "shiro-crypto-cipher"
        exclude module: "shiro-config-ogdl"
        exclude module: "shiro-config-core"
        exclude module: "shiro-cache"
        exclude module: "commons-logging"
    }
    compileOnly("com.vmware.gemfire:gemfire-core:$gemfireVersion") {
        exclude module: "commons-logging"
    }
    compileOnly("com.vmware.gemfire:gemfire-cq:$gemfireVersion")

    implementation 'org.json:json:20200518'
    implementation "com.vmware.gemfire:spring-integration-5.5-gemfire-10.0:${springIntegrationGemfire}"

    implementation 'com.vmware.gemfire:spring-boot-2.7-gemfire-10.0:1.0.0'
    implementation 'com.vmware.gemfire:spring-boot-logging-2.7-gemfire-10.0:1.0.0'
    implementation 'org.projectlombok:lombok:1.18.28'

//    implementation 'org.springframework.geode:spring-geode-starter-test'

    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.hibernate:hibernate-validator:6.2.5.Final'

    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'

    testImplementation("com.vmware.gemfire:gemfire-core:$gemfireVersion") {
        exclude module: "commons-logging"
    }
    testImplementation("com.vmware.gemfire:gemfire-cq:$gemfireVersion")
    testImplementation "org.springframework.boot:spring-boot-starter-test:2.7.10"

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.vmware.gemfire:gemfire-testcontainers:1.0'
    testImplementation 'io.projectreactor:reactor-test:3.4.18'
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        credentials {
            username "$gemfireRepoUsername"
            password "$gemfireRepoPassword"
        }
        url = uri("https://commercial-repo.pivotal.io/data3/gemfire-release-repo/gemfire")
    }
    def additionalMavenRepoURLs = project.ext.find('additionalMavenRepoURLs')
    if (additionalMavenRepoURLs != null && !additionalMavenRepoURLs.isEmpty() && !additionalMavenRepoURLs.isBlank()) {
        additionalMavenRepoURLs.split(',').each {
            project.getRepositories()
                    .maven(mavenRepository -> {
                        mavenRepository.setUrl(uri(it.toString()))
                    })
        }
    }
}
