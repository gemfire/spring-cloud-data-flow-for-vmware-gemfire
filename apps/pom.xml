<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) VMware, Inc. 2023. All rights reserved.
  ~ SPDX-License-Identifier: Apache-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.17</version>
        <relativePath></relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.vmware.gemfire.spring.cloud.stream</groupId>
    <artifactId>apps</artifactId>
    <version>1.0.0-build.9999</version>
    <packaging>pom</packaging>

    <name>GemFire Apps Modules</name>

    <modules>
        <module>gemfire-sink-kafka</module>
        <module>gemfire-sink-rabbit</module>
        <module>gemfire-source-kafka</module>
        <module>gemfire-source-rabbit</module>
    </modules>

    <scm>
        <connection>scm:git:git://github.com/spring-cloud/spring-cloud-stream-app-starters.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/spring-cloud/spring-cloud-stream-app-starters.git
        </developerConnection>
        <url>https://github.com/spring-cloud/spring-cloud-stream-app-starters</url>
    </scm>

    <properties>
        <skipTests>false</skipTests>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-security.version>5.8.8</spring-security.version>
        <spring-framework.version>5.3.30</spring-framework.version>

        <spring-boot.version>2.7.17</spring-boot.version>
        <spring-cloud.version>2021.0.8</spring-cloud.version>
        <spring-cloud-function.version>3.2.11</spring-cloud-function.version>
        <spring-cloud-stream-dependencies.version>3.2.9</spring-cloud-stream-dependencies.version>
        <gemfire.version>9.15.9</gemfire.version>
        <spring-cloud-supplier-gemfire.version>1.0.0-build.9999</spring-cloud-supplier-gemfire.version>
        <spring-cloud-consumer-gemfire.version>1.0.0-build.9999</spring-cloud-consumer-gemfire.version>
        <testcontainers.version>1.18.3</testcontainers.version>
        <spring-cloud-services-starter-config-client.version>3.5.5</spring-cloud-services-starter-config-client.version>
        <stream-applications-security-common.version>3.2.1</stream-applications-security-common.version>
        <stream-applications-postprocessor-common.version>3.2.1</stream-applications-postprocessor-common.version>
        <java-cfenv-boot.version>2.4.0</java-cfenv-boot.version>
        <gemfire-test-containers.version>1.1</gemfire-test-containers.version>
        <wavefront-spring-boot-bom.version>2.2.2</wavefront-spring-boot-bom.version>
        <gemfire-docker-image>gemfire/gemfire:9.15.9</gemfire-docker-image>
        <stream-applications-micrometer-common.version>3.2.1</stream-applications-micrometer-common.version>
        <prometheus-rsocket-spring.version>1.4.0</prometheus-rsocket-spring.version>
        <awaiti
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vmware.gemfire</groupId>
                <artifactId>spring-cloud-consumer-2021.0-gemfire-9.15</artifactId>
                <version>${spring-cloud-consumer-gemfire.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wavefront</groupId>
                <artifactId>wavefront-spring-boot-bom</artifactId>
                <version>${wavefront-spring-boot-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.pivotal.cfenv</groupId>
                <artifactId>java-cfenv-boot</artifactId>
                <version>${java-cfenv-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud.stream.app</groupId>
                <artifactId>stream-applications-postprocessor-common</artifactId>
                <version>${stream-applications-postprocessor-common.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud.stream.app</groupId>
                <artifactId>stream-applications-security-common</artifactId>
                <version>${stream-applications-security-common.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-function-dependencies</artifactId>
                <version>${spring-cloud-function.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-stream-dependencies</artifactId>
                <version>${spring-cloud-stream-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.vmware.gemfire</groupId>
                <artifactId>spring-cloud-supplier-2021.0-gemfire-9.15</artifactId>
                <version>${spring-cloud-supplier-gemfire.version}</version>
            </dependency>
            <dependency>
                <groupId>io.pivotal.spring.cloud</groupId>
                <artifactId>spring-cloud-services-starter-config-client</artifactId>
                <version>${spring-cloud-services-starter-config-client.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-sleuth-zipkin</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-wavefront</artifactId>
        </dependency>
        <dependency>
            <groupId>io.pivotal.spring.cloud</groupId>
            <artifactId>spring-cloud-services-starter-config-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-influx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud.stream.app</groupId>
            <artifactId>stream-applications-micrometer-common</artifactId>
            <version>${stream-applications-micrometer-common.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud.stream.app</groupId>
            <artifactId>stream-applications-security-common</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-datadog</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer.prometheus</groupId>
            <artifactId>prometheus-rsocket-spring</artifactId>
            <version>${prometheus-rsocket-spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud.stream.app</groupId>
            <artifactId>stream-applications-postprocessor-common</artifactId>
        </dependency>
        <dependency>
            <groupId>com.wavefront</groupId>
            <artifactId>wavefront-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.pivotal.cfenv</groupId>
            <artifactId>java-cfenv-boot</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmware.gemfire</groupId>
            <artifactId>gemfire-testcontainers</artifactId>
            <version>${gemfire-test-containers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmware.gemfire</groupId>
            <artifactId>geode-core</artifactId>
            <version>${gemfire.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmware.gemfire</groupId>
            <artifactId>geode-cq</artifactId>
            <version>${gemfire.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <repositories>
        <!-- (begin) additional repositories -->
        <repository>
            <id>gemfire-release-repo</id>
            <name>Pivotal GemFire Release Repository</name>
            <url>https://commercial-repo.pivotal.io/data3/gemfire-release-repo/gemfire</url>
        </repository>

        <!-- (end) additional repositories -->

        <repository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <from>
                        <image>springcloud/baseimage:latest</image>
                    </from>
                    <to>
                        <image>${project.artifactId}:${project.version}</image>
                    </to>
                    <container>
                        <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        <format>Docker</format>
                        <labels>
                            <org.springframework.cloud.dataflow.spring-configuration-metadata.json>
                                ${org.springframework.cloud.dataflow.spring.configuration.metadata.json}
                            </org.springframework.cloud.dataflow.spring-configuration-metadata.json>
                            <application.name>${project.artifactId}</application.name>
                            <application.version>${project.version}</application.version>
                        </labels>
                    </container>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <systemPropertyVariables>
                        <spring.test.gemfire.docker.image>${gemfire-docker-image}</spring.test.gemfire.docker.image>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>javadoc</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <quiet>true</quiet>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
